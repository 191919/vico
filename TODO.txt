BEFORE 1.0
==========

* tabstop setting per scope not honored!


!!! explorer flickers when opening new windows!

REGRESSIONS
===========


REQUESTED
=========

* When deleting (dd) last line and pasting it in other place, blank
  line is pasted, while if pasting back to the last line - it pastes
  normally. Also if pasting back (P) on the last line, it pastes both
  blank and the line.

* option to open files in the same view per default (ie, not tabs)
* @jasontorres: when I do an `:e filename` it always open on another tab :( Is there a way to prevent it from creating a new tab?

* @fkoeppe: How would I go about removing trailing white spaces on save?
* @tobiastom: Once more thing: pleeeease let me hide this stupid tab bar!

* vim text objects, especially i[, a] and it, at
* vicotool --wait <file>
* vicotool --line 1
* R (replace mode)

* show hidden files in explorer (option in action menu? or skipPattern?)

URGENT
========
* bundle commands not repeatable with dot
* undo manager messed up after undo and repeat of bundle command!
* :*buffer doesn't push on jump list
* split views top line is ANNOYINGLY changed when editing in another view
* :q should terminate app on last document in last window


BUGS
====
* :setf should remember url<->syntax mapping
* r<esc> should not insert literal <esc>
* h doesn't accept a count
* bundle commands time out when presenting ui
* get rid of ViBgView
* switch undo direction after bundle command
* o and O commands with a count does the wrong thing
* caret location is messed up after undo of bundle command
* jumpy selection in symbol list when clicking symbol
* vi always has a newline at EOF
* searching is slow on large files, naÃ¯ve implementation
* yk and yj commands don't position caret correctly
* search should be useable as motion command!
* using :set variable no longer changes default editing preferences


IMPORTANT
=========
* installer for vicotool
* indented paste
* showAsHtml + dontFollowOutput (?)
* Reload themes!
* Reload bundles!
* dot should work with ! filters
* :write !program
* :read
* :read !program
* :edit! => revert
* support a count in C and h commands
* highlight caret after goto line
* allow ex commands when there is no open document?


FEATURES
========
* @fkoeppe: Option to synchronize selected file in File Explorer with currently selected file
* @fkoeppe: Indicating if a file is "dirty" in the tab bar.
* @kamens: Any way to resize splits w/ key bindings? Like <c-w>_ or <c-w>+
* :mkdir command
* completion expressions in nu
* zt, zz, zb (scroll cursor to top, center, bottom)
* ZZ and ZQ, and make :q just close the current document (?)
* p/P with a count
* J with visual selection, and J with a count
* +/- commands
* global marks (A-Z)
* open alternative file (.h/.c/.m)
* :map commands
* preference pane for editing macros?
* honor bundle ordering when showing ambiguous items menu
* move split views relative each other
* convert horizontal split to vertical and vice versa
* :e# => open alternate file
* set incsearch
* set listchars
* symbol list should use same filtering algorithm as file explorer
* implement R
* implement c-w in insert mode
* :normal!
* project shell variables
* draw marks in gutter view
* action menu on document tabs with
  * close tab
  * close others
* dynamic headIndent paragraph style dependent on line indentation
* cdpath setting? looked at by :edit
* 0<C-D> in insert mode removes all indentation


LONG TERM FEATURES
==================
* syntax / scope inspector, like in espresso.app
  * remove show_scope: and shift-ctrl-p mapping
* scope injection
* preview location while searching/traversing symbol list
  - esc cancels, go back to before
  - enter/click shows yellow highlight
* block selection with ctrl-v + block editing
* autocommands (or events)
* undo tree + visualisation (check out Gundo)
* integrated terminal

* project search
* @lampshadish: All I need now is some sort of recursive-find-in-directory and I can switch. Maybe using #ack so it doesn't block like in TextMate.

* @growt: Some neat git integration would be great, like coloring the line number of rows that changed or a diff-tool. but first things first


IDEAS
=====
* ODB Editor suite? why?
* make vi keys preferred over bundle key equivalents?


:command calling for bundle commands? arguments?
