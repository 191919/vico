BEFORE 1.0
==========

2011-06-13 12:02:43.873 Vico[9043:903] HIToolbox: ignoring exception '*** -[NSCFString characterAtIndex:]: Range or index out of bounds' that raised inside Carbon event dispatch
(
	0   CoreFoundation                      0x00007fff8158c7b4 __exceptionPreprocess + 180
	1   libobjc.A.dylib                     0x00007fff81b3e0f3 objc_exception_throw + 45
	2   CoreFoundation                      0x00007fff8158c5d7 +[NSException raise:format:arguments:] + 103
	3   CoreFoundation                      0x00007fff8158c564 +[NSException raise:format:] + 148
	4   Foundation                          0x00007fff887c54c1 -[NSCFString characterAtIndex:] + 97
	5   Vico                                0x0000000100082b27 -[ViTextView(vi_commands) move_to_match:] + 1495
	6   Vico                                0x000000010009d2ab -[ViTextView keyManager:evaluateCommand:] + 2971
	7   Vico                                0x000000010010081a -[ViKeyManager evalCommand:] + 250
	8   Vico                                0x0000000100100c6b -[ViKeyManager handleKey:allowMacros:inScope:fromMacro:excessKeys:error:] + 1067
	9   Vico                                0x0000000100100e8e -[ViKeyManager handleKey:inScope:] + 110
	10  Vico                                0x000000010009d929 -[ViTextView insertText:replacementRange:] + 617
	11  AppKit                              0x00007fff82c0f471 -[NSTextInputContext handleTSMEvent:] + 2204
	12  AppKit                              0x00007fff82c0ebc6 _NSTSMEventHandler + 156
	13  HIToolbox                           0x00007fff800637f7 _ZL23DispatchEventToHandlersP14EventTargetRecP14OpaqueEventRefP14HandlerCallRec + 1002
	14  HIToolbox                           0x00007fff80062d46 _ZL30SendEventToEventTargetInternalP14OpaqueEventRefP20OpaqueEventTargetRefP14HandlerCallRec + 395
	15  HIToolbox                           0x00007fff80080a81 SendEventToEventTarget + 45
	16  HIToolbox                           0x00007fff800b2213 SendTSMEvent + 48
	17  HIToolbox                           0x00007fff800b1db9 SendUnicodeTextAEToUnicodeDoc + 468
	18  HIToolbox                           0x00007fff800b1b34 TSMKeyEvent + 604
	19  HIToolbox                           0x00007fff8009c5d8 TSMProcessRawKeyEvent + 1909
	20  AppKit                              0x00007fff82c0d8bb -[NSTextInputContext handleEvent:] + 620
	21  AppKit                              0x00007fff82c0d5e5 -[NSView interpretKeyEvents:] + 186
	22  AppKit                              0x00007fff82c0d3be -[NSTextView keyDown:] + 819
	23  Vico                                0x000000010009dc0a -[ViTextView keyDown:] + 90
	24  AppKit                              0x00007fff82b7f06f -[NSWindow sendEvent:] + 8769
	25  AppKit                              0x00007fff82ab3a86 -[NSApplication sendEvent:] + 4719
	26  AppKit                              0x00007fff82a4a4da -[NSApplication run] + 474
	27  AppKit                              0x00007fff82a431a8 NSApplicationMain + 364
	28  Vico                                0x0000000100002e07 main + 647
	29  Vico                                0x0000000100001b24 start + 52
)
2011-06-13 12:02:43.875 Vico[9043:903] *** -[NSCFString characterAtIndex:]: Range or index out of bounds


? use ViScope instead of NSArray *scopeArray -> can use u_int16_t array internally
* can Nu return BOOLs?
* define custom commands, see http://help.vicoapp.com/ideas/tag-text-objects-commands
* "&" in :s replace part should expand to whole match
* check map error in excessKeys.nu (re vs r duplicate mapping)

? cmd-slash highlights current line?
* [deferred wait] actually blocks the UI! Major fuck-up if SFTP is down!
* why doesn't objc indent expression work anymore?
* not all properties converted to nonatomic


REGRESSIONS
===========


REQUESTED
=========

* When deleting (dd) last line and pasting it in other place, blank
  line is pasted, while if pasting back to the last line - it pastes
  normally. Also if pasting back (P) on the last line, it pastes both
  blank and the line.

* @fkoeppe: How would I go about removing trailing white spaces on save?

* vim text objects, especially i[, a] and it, at
* vicotool --line 1
* R (replace mode)

* search should be useable as motion command!


URGENT
========
* explorer flickers when opening new windows!
* bundle commands not repeatable with dot
* undo manager messed up after undo and repeat of bundle command!
* :*buffer doesn't push on jump list
* split views top line is ANNOYINGLY changed when editing in another view
* :q should terminate app on last document in last window


BUGS
====
* jumps doesn't work in untitled files
* h doesn't accept a count
* bundle commands time out when presenting ui
* get rid of ViBgView
* switch undo direction after bundle command
* o and O commands with a count does the wrong thing
* caret location is messed up after undo of bundle command
* jumpy selection in symbol list when clicking symbol
* vi always has a newline at EOF
* searching is slow on large files, naÃ¯ve implementation
* yk and yj commands don't position caret correctly
* Downloading tmbundles seems to duplicate tab triggers (HN)
* push marks
* push jumps


IMPORTANT
=========
* installer for vicotool
* indented paste
* showAsHtml + dontFollowOutput (?)
* Reload themes!
* Reload bundles!
* dot should work with ! filters
* :write !program
* :read
* :read !program
* :edit! => revert
* support a count in C and h commands
* highlight caret after goto line
* allow ex commands when there is no open document?


FEATURES
========
* ability to direct stderr to other place than (or, separately from) stdout in bundle commands
* Ability to edit tmbundles within the app (HN)
* @fkoeppe: Option to synchronize selected file in File Explorer with currently selected file
* @fkoeppe: Indicating if a file is "dirty" in the tab bar.
* @kamens: Any way to resize splits w/ key bindings? Like <c-w>_ or <c-w>+
* :mkdir command
* completion expressions in nu
* zt, zz, zb (scroll cursor to top, center, bottom)
* ZZ and ZQ, and make :q just close the current document (?)
* p/P with a count
* J with visual selection, and J with a count
* +/- commands
* global marks (A-Z)
* open alternative file (.h/.c/.m)
* :map commands
* preference pane for editing macros?
* honor bundle ordering when showing ambiguous items menu
* move split views relative each other
* convert horizontal split to vertical and vice versa
* :e# => open alternate file
* set incsearch
* set listchars
* symbol list should use same filtering algorithm as file explorer
* implement R
* implement c-w in insert mode
* :normal!
* project shell variables
* draw marks in gutter view
* action menu on document tabs with
  * close tab
  * close others
* dynamic headIndent paragraph style dependent on line indentation
* cdpath setting? looked at by :edit
* 0<C-D> in insert mode removes all indentation
* g$ and g0 and g^


LONG TERM FEATURES
==================
* syntax / scope inspector, like in espresso.app
  * remove show_scope: and shift-ctrl-p mapping
* scope injection
* preview location while searching/traversing symbol list
  - esc cancels, go back to before
  - enter/click shows yellow highlight
* block selection with ctrl-v + block editing
* autocommands (or events)
* undo tree + visualisation (check out Gundo)
* integrated terminal

* project search
* @lampshadish: All I need now is some sort of recursive-find-in-directory and I can switch. Maybe using #ack so it doesn't block like in TextMate.

* @growt: Some neat git integration would be great, like coloring the line number of rows that changed or a diff-tool. but first things first


IDEAS
=====
* ODB Editor suite? why?
* make vi keys preferred over bundle key equivalents?


:command calling for bundle commands? arguments?
