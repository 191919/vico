#!/bin/sh

REPO_VERSION=$(hg id -n)
VERSION=$1
if test -z "$VERSION"; then
	echo "missing version"
	exit 2
fi

echo "Building vibrant version $VERSION (repo version $REPO_VERSION)"

xcodebuild -project vibrant.xcodeproj -target Vibrant -configuration Release build VERSION=$VERSION REPO_VERSION=$REPO_VERSION || exit

TMPDMG=vibrant-tmp.dmg
/bin/rm -f $TMPDMG

die()
{
    echo "$1"
    /bin/rm -f $TMPDMG
    exit 1
}

APP=build/Release/Vibrant.app

echo "Stripping binary"
strip $APP/Contents/MacOS/Vibrant

VOL="Vibrant $VERSION"
DMG="$VOL.dmg"
echo "Creating disk image $VOL"

# clean up if we're interrupted
trap 'die Interrupted' 2 3 15

# Create the source folder and copy the application there.
mkdir "$VOL" || die "failed to create .dmg source folder"
/bin/cp -R $APP "$VOL" || die "failed to copy application to the .dmg source folder"
ln -s /Applications "$VOL/Applications"

# Create a disk image of the source folder and compress it.
hdiutil makehybrid -o "$TMPDMG" "$VOL" -hfs
hdiutil convert -format UDBZ "$DMG" -o "$TMPDMG"

/bin/rm -f $TMPDMG
ls -lh "$DMG"

#### Create and sign a zip file for automatic updates.

BASE="http://bzero.se/vibrant"

KSIZE=$(du -ks "$APP" | cut -f1)
SIZE=$(($KSIZE * 1024))
SIGNATURE=$(/usr/bin/openssl dgst -sha1 -binary < "$DMG" | /usr/bin/openssl dgst -dss1 -sign sparkle_priv.pem | /usr/bin/openssl enc -base64)

cat > $VOL.xml <<EOF
<item>
    <title>Version $VERSION</title>
    <sparkle:releaseNotesLink>
        $BASE/version-$VERSION.html
    </sparkle:releaseNotesLink>
    <pubDate>$(LC_TIME=en_US date +"%a, %d %b %G %T %z")</pubDate>
    <enclosure url="$($BASE/$DMG | sed 's/ /+/g')"
               sparkle:version="$REPO_VERSION"
               sparkle:shortVersionString="$VERSION"
               sparkle:dsaSignature="$SIGNATURE"
               length="$SIZE"
               type="application/octet-stream" />
</item>
EOF
cat "$VOL.xml"

echo "scp '$DMG' bzero.se:/var/www/htdocs/bzero.se/vibrant"

